// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab365_Todo_Api.Models;

#nullable disable

namespace lab365_Todo_Api.Migrations
{
    [DbContext(typeof(TodoContextDB))]
    [Migration("20240415024030_UpdateCreatedAtTodoItem")]
    partial class UpdateCreatedAtTodoItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lab365_Todo_Api.Models.TodoItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("TodoItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            CreatedAt = new DateTime(2024, 4, 14, 23, 40, 30, 171, DateTimeKind.Local).AddTicks(2716),
                            Name = "Item 1"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2024, 4, 14, 23, 40, 30, 171, DateTimeKind.Local).AddTicks(2732),
                            Name = "Item 2"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            CreatedAt = new DateTime(2024, 4, 14, 23, 40, 30, 171, DateTimeKind.Local).AddTicks(2735),
                            Name = "Item 3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
